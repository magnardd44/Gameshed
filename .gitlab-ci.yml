image: node:latest # Use a docker image from https://hub.docker.com with latest Node.js already installed

variables:
  #  # Configure server/src/mysql-pool.ts
  MYSQL_HOST: localhost
  MYSQL_USER: test # Docker commands are run as root
  MYSQL_PASSWORD: test # Default root password is empty string
  MYSQL_DATABASE: test

  IGDB_CLIENT_ID: 'jggwkki694bcpccn7nwz0d5uoi1dn4'
  IGDB_CLIENT_SECRET: 'pysekvcpf8zhkqdzjyrzygy7a3wpv5'

stages:
  - build # Jobs placed in build stage will run first
  - test # Jobs placed in test stage will run after build jobs

install:
  stage: build
  script:
    - cd server
    - npm install
    - cd ../client
    - npm install
  artifacts: # Keep node_modules folder for the following stages
    paths:
      - server/node_modules
      - client/node_modules

prettier:
  stage: test # The prettier job will run in parallel with the typescript and test jobs
  script:
    - cd server
    - ./node_modules/.bin/prettier --check src/* test/*
    - cd ../client
    - ./node_modules/.bin/prettier --check src/* test/*

typescript:
  stage: test # The typescript job will run in parallel with the prettier and test jobs
  script:
    - cd server
    - ./node_modules/.bin/tsc --noEmit
    - cd ..
    - cd client
    - ./node_modules/.bin/tsc --noEmit

test:
  stage: test # The test job will run in parallel with the typescript and prettier jobs
  script:
        - apt-get update
        - apt-get -y upgrade
        - apt-get -y install default-mysql-server
        - service mariadb start
        # Workaround from https://github.com/mysqljs/mysql/issues/1507#issuecomment-242885003
        #        - echo "UPDATE user SET authentication_string=password(''), plugin='mysql_native_password' WHERE
        #          user='root';" | mysql mysql
        # Create database tables
        #
        - mysqladmin create $MYSQL_DATABASE
        - mysql $MYSQL_DATABASE < database.sql

          #        - echo "CREATE TABLE games (game_id INT NOT NULL AUTO_INCREMENT, igdb_id INT NOT NULL, game_title TEXT
          #          NOT NULL, game_description TEXT NOT NULL, PRIMARY KEY(game_id));" | mysql $MYSQL_DATABASE
          #
          #        - echo "CREATE TABLE genres (genre_id INT NOT NULL AUTO_INCREMENT, genre_name TEXT NOT NULL, genre_img TEXT, PRIMARY KEY(genre_id));" | mysql $MYSQL_DATABASE
          #
          #        - echo "CREATE TABLE mapping_genre (g_mapping_id INT NOT NULL AUTO_INCREMENT, game_id INT NOT NULL, genre_id INT
          #          NOT NULL, PRIMARY KEY(g_mapping_id));" | mysql $MYSQL_DATABASE
          #
          #        - echo "CREATE TABLE mapping_platform (p_mapping_id INT NOT NULL AUTO_INCREMENT, platform_id INT NOT NULL, game_id INT NOT NULL, PRIMARY KEY(p_mapping_id));" | mysql $MYSQL_DATABASE
          #
          #        - echo "CREATE TABLE mapping_relevant (relevant_id INT NOT NULL AUTO_INCREMENT, user_id INT NOT NULL, review_id INT NOT NULL, PRIMARY KEY(relevant_id));" | mysql $MYSQL_DATABASE
          #
          #        - echo "CREATE TABLE platforms (platform_id INT NOT NULL AUTO_INCREMENT, platform_name TEXT NOT NULL, PRIMARY KEY(platform_id));" | mysql $MYSQL_DATABASE
          #                  
          #        - echo "CREATE TABLE reviews (review_id INT NOT NULL AUTO_INCREMENT, game_id INT NOT NULL, review_title TEXT NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, rating INT NOT NULL, published bool DEFAULT false
          #          DEFAULT false, PRIMARY KEY(review_id));" | mysql $MYSQL_DATABASE
          #
          #        - echo "CREATE TABLE users (user_id INT NOT NULL AUTO_INCREMENT, user_nickname VARCHAR(50), user_about VARCHAR(500), email VARCHAR(50) NOT NULL, salt VARCHAR(16) NOT NULL, hash VARCHAR(64) NOT NULL
          #          DEFAULT false, PRIMARY KEY(user_id));" | mysql $MYSQL_DATABASE
          #
        - > 
          echo "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD'; GRANT ALL PRIVILEGES ON
          $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%'; FLUSH PRIVILEGES;" | mysql

        - cd server
        - echo "" > test/config.ts # Create empty config.ts to avoid error on npm test
        # Workaround for strange gitlab ci bug
        - export MYSQL_HOST=127.0.0.1
        - npm test
        - cd ../client
        - npm test
